import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "se.bjurr.gitchangelog:git-changelog-gradle-plugin:1.32"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'

apply from: 'build_properties.gradle'

version = mc_version + "-" + mod_version
group= mod_group
archivesBaseName = mod_archive_base_name

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

minecraft {
    version = mc_version + "-" + forge_version
    runDir = "run"

    mappings = mappings_version
    makeObfSourceJar = false

    replaceIn mod_ref_file_loc
    replace "mod_version", project.version
}

repositories{
    maven{
        //Required for Chisel integration
        url = "http://maven.tterrag.com/"
    }
}

dependencies {
    //deobfCompile "team.chisel:Chisel:MC${mc_version}-${chisel_version}:api"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }

    extension = 'jar'
    classifier = 'dev'
}

artifacts {
    archives devJar
}

task makeChangelog(type: GitChangelogTask) {
    filePath = "build/changelog.html"
    untaggedName = "Current release ${version}"
    templateContent = "${changelog_html}"
}

